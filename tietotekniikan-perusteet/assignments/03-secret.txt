
Assignment 01: Shopping List
----------------------------
items = []
for i in range(5):
    item = input(f"Enter item {i+1}: ")
    items.append(item)
print(items)

Assignment 02: Add Item to List
-------------------------------
fruits = ["apple", "banana", "orange"]
new_fruit = input("Enter a fruit to add: ")
fruits.append(new_fruit)
print(fruits)

Assignment 03: Remove Item from List
------------------------------------
fruits = ["apple", "banana", "orange"]
to_remove = input("Enter a fruit to remove: ")
if to_remove in fruits:
    fruits.remove(to_remove)
    print(fruits)
else:
    print("Not in list")

Assignment 04: Sort and Print List
----------------------------------
numbers = []
for i in range(5):
    num = int(input(f"Enter number {i+1}: "))
    numbers.append(num)
numbers.sort()
print(numbers)

Assignment 05: List Average
---------------------------
numbers = []
for i in range(5):
    num = float(input(f"Enter number {i+1}: "))
    numbers.append(num)
average = sum(numbers) / len(numbers)
print("Average:", average)

Assignment 06: Count Occurrences
--------------------------------
words = input("Enter words (comma separated): ").split(",")
counts = {}
for word in words:
    counts[word] = counts.get(word, 0) + 1
print(counts)

Assignment 07: Tuple Packing
----------------------------
person = ("Anna", 25, "Finland")
print(person[0])
print(person[1])
print(person[2])

Assignment 08: Immutable Tuples
-------------------------------
person = ("Anna", 25, "Finland")
# person[0] = "Bob"  # TypeError: 'tuple' object does not support item assignment

Assignment 09: Set Creation
---------------------------
s = set()
for i in range(5):
    word = input(f"Enter word {i+1}: ")
    s.add(word)
print(s)

Assignment 10: Set Membership Test
----------------------------------
names = {"Alice", "Bob", "Charlie"}
user_input = input("Enter a name: ")
if user_input in names:
    print("Name is allowed")
else:
    print("Name not allowed")

Assignment 11: Dictionary Lookup
--------------------------------
ages = {"John": 25, "Mary": 30, "Alex": 22}
name = input("Enter a name: ")
if name in ages:
    print(f"{name}'s age is {ages[name]}")
else:
    print("Name not found")

Assignment 12: Update Dictionary
--------------------------------
ages = {"John": 25, "Mary": 30, "Alex": 22}
name = input("Enter new name: ")
age = int(input("Enter age: "))
ages[name] = age
print(ages)

Assignment 13: Dictionary from Input
------------------------------------
scores = {}
for i in range(3):
    name = input("Enter name: ")
    score = int(input("Enter score: "))
    scores[name] = score
print(scores)

Assignment 14: Unique Items
---------------------------
items = input("Enter items (comma separated): ").split(",")
unique_items = set(items)
print(unique_items)

Assignment 15: Dictionary Gradebook
-----------------------------------
grades = {}
for i in range(5):
    name = input("Enter student name: ")
    grade = input("Enter grade: ")
    grades[name] = grade
for name, grade in grades.items():
    print(f"{name}: grade {grade}")

Assignment 16: Nested Dictionary
--------------------------------
students = {
    "Alice": {"age": 21, "major": "CS"},
    "Bob": {"age": 22, "major": "Math"}
}
name = input("Enter student name: ")
if name in students:
    print(students[name])
else:
    print("Student not found")

Assignment 17: List of Dictionaries
-----------------------------------
products = [
    {"name": "milk", "price": 1.5},
    {"name": "bread", "price": 2.0}
]
for product in products:
    print(f"{product['name']} costs {product['price']}")

Assignment 18: Set Operations
-----------------------------
set1 = set(input("Enter numbers for set 1 (comma separated): ").split(","))
set2 = set(input("Enter numbers for set 2 (comma separated): ").split(","))
print("Union:", set1.union(set2))
print("Intersection:", set1.intersection(set2))

Assignment 19: Convert List to Dict
-----------------------------------
d = {}
for i in range(3):
    entry = input("Enter key:value pair: ")
    key, value = entry.split(":")
    d[key] = value
print(d)

Assignment 20: Check Palindrome with List
-----------------------------------------
word = input("Enter a word: ")
if list(word) == list(reversed(word)):
    print("Palindrome")
else:
    print("Not a palindrome")
